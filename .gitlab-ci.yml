default:
  image: ubuntu:22.04

stages:
  - build
  - test
  - deploy

.build-environment: &gcc-build-environment
  - |
    apt-get update
    apt-get install -y make cmake ninja-build
    apt-get install -y g++-12 libncurses-dev
    apt-get install -y git
  - update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-12 90
      --slave /usr/bin/c++ c++ /usr/bin/g++-12
      --slave /usr/bin/gcov gcov /usr/bin/gcov-12

.build-environment-11: &gcc-11-build-environment
  - |
    apt-get install -y make ninja-build g++-11 libncurses-dev
    update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-11 90 --slave /usr/bin/c++ c++ /usr/bin/g++-11

.install-cmake: &install-cmake
  - |
    apt-get update
    apt-get install -y gpg wget software-properties-common ca-certificates
  - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null |
      gpg --dearmor - |
      tee /usr/share/keyrings/kitware-archive-keyring.gpg > /dev/null
  - echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' |
      tee /etc/apt/sources.list.d/kitware.list > /dev/null
  - |
    add-apt-repository ppa:ubuntu-toolchain-r/test
    apt-get update
    apt-get install -y cmake

.install-clang-17: &install-clang-17
  - |
    apt-get update
    apt-get install -y wget lsb-release software-properties-common gnupg
    wget https://apt.llvm.org/llvm.sh
    chmod +x llvm.sh
    yes | ./llvm.sh 17
    apt-get update
    apt-get install -y clang-tidy-17
    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-17 90 --slave /usr/bin/clang++ clang++ /usr/bin/clang++-17

build-job-20:
  image: ubuntu:20.04
  stage: build
  script:
    - *install-cmake
    - *gcc-11-build-environment
    - rm -rf build/debug
    - LIPS_TEST_TAGS='~[root]' make debug

build-job-22:
  stage: build
  script:
    - *gcc-build-environment
    - rm -rf build/debug
    - LIPS_TEST_TAGS='~[root]' make debug
  artifacts:
    paths:
      - build/

coverage-test-job:
  stage: test
  script:
    - *gcc-build-environment
    - apt-get install -y lcov
    - LIPS_TEST_TAGS='~[root]' make coverage
  dependencies:
    - build-job-22
  coverage: '/functions..: \d+(?:\.\d+)?/'

unit-test-job:
  stage: test
  script:
    - *gcc-build-environment
    - LIPS_TEST_TAGS='~[root]' make test
  dependencies:
    - build-job-22

package-test-job:
  stage: test
  script:
    - *gcc-build-environment
    - make package-test
  dependencies:
    - build-job-22

deploy-job:
  stage: deploy
  script:
    - *gcc-build-environment
    - rm -rf build/release
    - make release
